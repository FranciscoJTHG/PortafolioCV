---
import BaseLayout from "../layouts/BaseLayout.astro";

const clasButton = {
	main: 'inline-flex items-center px-4 h-10 rounded-md shadow-sm bg-primary-600 select-none cursor-pointer',
  hover: 'hover:bg-primary-700',
  active: 'active:translate-y-px',
  focus: 'focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500',
	badge: 'badge',
	badgeSecondary: 'badge-primary',
};

const clasInput = [
  "mt-1",
  "block",
  "w-full",
  "px-4",
  "py-2",
  "border",
  "border-gray-300",
  "dark:border-gray-600",
  "rounded-md",
  "shadow-sm",
  "focus:ring-primary-500",
  "focus:border-primary-500",
  "sm:text-sm",
  "bg-white",
  "dark:bg-gray-700",
  "text-gray-900",
  "dark:text-gray-100",
  "input",
  "input-primary"
];

const className = Object.values(clasButton).join(' ');
// const classInput = clasInput.join(' ');

---

<BaseLayout title="Contacto" sideBarActiveItemID="contact">
  <div class="max-w-3xl mx-auto p-4 sm:p-6 lg:p-8">
    <h1 class="text-4xl font-bold text-center mb-8">Contáctame</h1>
    <p class="text-center text-lg mb-10">
      Estoy abierto a nuevas oportunidades laborales y proyectos de colaboración. Si mi perfil te resulta interesante, no dudes en ponerte en contacto.
    </p>

    <form id="contactForm" class="space-y-6 bg-base-100 p-8 rounded-lg shadow-lg">
      <input type="hidden" name="access_key" value="3a752949-743f-4cfd-ac47-e6bffc4a6159">
      <input type="hidden" name="_captcha" value="false">
      <div id="formMessages" class="mt-4 text-center"></div>
      <div>
        <label for="name" class="block text-sm font-medium">Nombre completo</label>
        <input
          type="text"
          name="name"
          id="name"
          autocomplete="name"
          required
          class:list={[clasInput]}
        />
      </div>

      <div>
        <label for="email" class="block text-sm font-medium">Correo electrónico</label>
        <input
          type="email"
          name="email"
          id="email"
          autocomplete="email"
          required
          class:list={[clasInput]}
        />
      </div>

      <div>
        <label for="message" class="block text-sm font-medium">Mensaje</label>
        <textarea
          id="message"
          name="message"
          rows="5"
          required
          class:list={[clasInput]}
        ></textarea>
      </div>

      <div class="flex justify-center">
        <button
          type="submit"
          class={className}
        >
          Enviar Mensaje
        </button>
      </div>
    </form>
  </div>
</BaseLayout>

<script is:inline>
  const form = document.getElementById('contactForm');
  const formMessages = document.getElementById('formMessages');

  form.addEventListener('submit', async (event) => {
    event.preventDefault(); // Prevent default form submission

    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    try {
      const response = await fetch('https://api.web3forms.com/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: json,
      });

      const result = await response.json();

      if (result.success) {
        formMessages.innerHTML = '<p class="text-green-600">¡Mensaje enviado con éxito! Te responderé pronto.</p>';
        form.reset(); // Clear the form
      } else {
        formMessages.innerHTML = '<p class="text-red-600">Hubo un error al enviar el mensaje. Por favor, inténtalo de nuevo.</p>';
        console.error('Web3Forms error:', result.message);
      }
    } catch (error) {
      formMessages.innerHTML = '<p class="text-red-600">Hubo un error de red. Por favor, verifica tu conexión e inténtalo de nuevo.</p>';
      console.error('Fetch error:', error);
    }
  });
</script>
